"""make ThargoidWar fields optional

Revision ID: f6b71224e220
Revises: a41aac16b9b4
Create Date: 2023-12-28 18:40:59.650092+00:00

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "f6b71224e220"
down_revision = "a41aac16b9b4"
branch_labels = None
depends_on = None


def upgrade(engine_name: str) -> None:
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name: str) -> None:
    globals()["downgrade_%s" % engine_name]()


def upgrade_postgresql() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("thargoid_war", schema=None) as batch_op:
        batch_op.alter_column("currentState", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("successState", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("failureState", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("progress", existing_type=sa.NUMERIC(), nullable=True)
        batch_op.alter_column(
            "daysRemaining", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column(
            "portsRemaining", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column(
            "successReached", existing_type=sa.BOOLEAN(), nullable=True
        )

    # ### end Alembic commands ###


def downgrade_postgresql() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("thargoid_war", schema=None) as batch_op:
        batch_op.alter_column(
            "successReached", existing_type=sa.BOOLEAN(), nullable=False
        )
        batch_op.alter_column(
            "portsRemaining", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.alter_column(
            "daysRemaining", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.alter_column("progress", existing_type=sa.NUMERIC(), nullable=False)
        batch_op.alter_column(
            "failureState", existing_type=sa.VARCHAR(), nullable=False
        )
        batch_op.alter_column(
            "successState", existing_type=sa.VARCHAR(), nullable=False
        )
        batch_op.alter_column(
            "currentState", existing_type=sa.VARCHAR(), nullable=False
        )

    # ### end Alembic commands ###


def upgrade_sqlite() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("thargoid_war", schema=None) as batch_op:
        batch_op.alter_column("currentState", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("successState", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("failureState", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("progress", existing_type=sa.NUMERIC(), nullable=True)
        batch_op.alter_column(
            "daysRemaining", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column(
            "portsRemaining", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column(
            "successReached", existing_type=sa.BOOLEAN(), nullable=True
        )

    # ### end Alembic commands ###


def downgrade_sqlite() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("thargoid_war", schema=None) as batch_op:
        batch_op.alter_column(
            "successReached", existing_type=sa.BOOLEAN(), nullable=False
        )
        batch_op.alter_column(
            "portsRemaining", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.alter_column(
            "daysRemaining", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.alter_column("progress", existing_type=sa.NUMERIC(), nullable=False)
        batch_op.alter_column(
            "failureState", existing_type=sa.VARCHAR(), nullable=False
        )
        batch_op.alter_column(
            "successState", existing_type=sa.VARCHAR(), nullable=False
        )
        batch_op.alter_column(
            "currentState", existing_type=sa.VARCHAR(), nullable=False
        )

    # ### end Alembic commands ###
