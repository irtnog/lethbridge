"""create database

Revision ID: 549d345a9779
Revises:
Create Date: 2023-07-31 19:07:51.923014+00:00

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "549d345a9779"
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name: str) -> None:
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name: str) -> None:
    globals()["downgrade_%s" % engine_name]()


def upgrade_postgresql() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "faction",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("allegiance", sa.String(), nullable=True),
        sa.Column("government", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "system",
        sa.Column("id64", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("x", sa.Numeric(), nullable=False),
        sa.Column("y", sa.Numeric(), nullable=False),
        sa.Column("z", sa.Numeric(), nullable=False),
        sa.Column("allegiance", sa.String(), nullable=True),
        sa.Column("government", sa.String(), nullable=True),
        sa.Column("primaryEconomy", sa.String(), nullable=True),
        sa.Column("secondaryEconomy", sa.String(), nullable=True),
        sa.Column("security", sa.String(), nullable=True),
        sa.Column("population", sa.BigInteger(), nullable=True),
        sa.Column("bodyCount", sa.Integer(), nullable=True),
        sa.Column("controllingFaction_id", sa.String(), nullable=True),
        sa.Column("powerState", sa.String(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["controllingFaction_id"],
            ["faction.name"],
        ),
        sa.PrimaryKeyConstraint("id64"),
    )
    op.create_table(
        "body",
        sa.Column("id64", sa.BigInteger(), nullable=False),
        sa.Column("bodyId", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("subType", sa.String(), nullable=True),
        sa.Column("distanceToArrival", sa.Numeric(), nullable=True),
        sa.Column("mainStar", sa.Boolean(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("spectralClass", sa.String(), nullable=True),
        sa.Column("luminosity", sa.String(), nullable=True),
        sa.Column("absoluteMagnitude", sa.Numeric(), nullable=True),
        sa.Column("solarMasses", sa.Numeric(), nullable=True),
        sa.Column("solarRadius", sa.Numeric(), nullable=True),
        sa.Column("isLandable", sa.Boolean(), nullable=True),
        sa.Column("gravity", sa.Numeric(), nullable=True),
        sa.Column("earthMasses", sa.Numeric(), nullable=True),
        sa.Column("radius", sa.Numeric(), nullable=True),
        sa.Column("surfaceTemperature", sa.Numeric(), nullable=True),
        sa.Column("surfacePressure", sa.Numeric(), nullable=True),
        sa.Column("volcanismType", sa.String(), nullable=True),
        sa.Column("atmosphereType", sa.String(), nullable=True),
        sa.Column("terraformingState", sa.String(), nullable=True),
        sa.Column("reserveLevel", sa.String(), nullable=True),
        sa.Column("rotationalPeriod", sa.Numeric(), nullable=True),
        sa.Column("rotationalPeriodTidallyLocked", sa.Boolean(), nullable=True),
        sa.Column("axialTilt", sa.Numeric(), nullable=True),
        sa.Column("orbitalPeriod", sa.Numeric(), nullable=True),
        sa.Column("semiMajorAxis", sa.Numeric(), nullable=True),
        sa.Column("orbitalEccentricity", sa.Numeric(), nullable=True),
        sa.Column("orbitalInclination", sa.Numeric(), nullable=True),
        sa.Column("argOfPeriapsis", sa.Numeric(), nullable=True),
        sa.Column("meanAnomaly", sa.Numeric(), nullable=True),
        sa.Column("ascendingNode", sa.Numeric(), nullable=True),
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("system_id64", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("id64"),
    )
    op.create_table(
        "faction_state",
        sa.Column("influence", sa.Numeric(), nullable=False),
        sa.Column("state", sa.String(), nullable=False),
        sa.Column("faction_name", sa.String(), nullable=False),
        sa.Column("system_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["faction_name"],
            ["faction.name"],
        ),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("faction_name", "system_id64"),
    )
    op.create_table(
        "powerplay",
        sa.Column("power", sa.String(), nullable=False),
        sa.Column("system_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("power", "system_id64"),
    )
    op.create_table(
        "atmosphere_composition",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("percentage", sa.Numeric(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "belt",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("mass", sa.BigInteger(), nullable=False),
        sa.Column("innerRadius", sa.BigInteger(), nullable=False),
        sa.Column("outerRadius", sa.BigInteger(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "body_timestamp",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("value", sa.DateTime(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "material",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("percentage", sa.Numeric(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "parent",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("bodyId", sa.Integer(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "bodyId", "body_id64"),
    )
    op.create_table(
        "ring",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("mass", sa.BigInteger(), nullable=False),
        sa.Column("innerRadius", sa.BigInteger(), nullable=False),
        sa.Column("outerRadius", sa.BigInteger(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "solid_composition",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("percentage", sa.Numeric(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "station",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("controllingFaction_id", sa.String(), nullable=True),
        sa.Column("controllingFactionState", sa.String(), nullable=True),
        sa.Column("distanceToArrival", sa.Numeric(), nullable=True),
        sa.Column("primaryEconomy", sa.String(), nullable=True),
        sa.Column("allegiance", sa.String(), nullable=True),
        sa.Column("government", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("latitude", sa.Numeric(), nullable=True),
        sa.Column("longitude", sa.Numeric(), nullable=True),
        sa.Column("largeLandingPads", sa.Integer(), nullable=True),
        sa.Column("mediumLandingPads", sa.Integer(), nullable=True),
        sa.Column("smallLandingPads", sa.Integer(), nullable=True),
        sa.Column("body_id64", sa.BigInteger(), nullable=True),
        sa.Column("system_id64", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.ForeignKeyConstraint(
            ["controllingFaction_id"],
            ["faction.name"],
        ),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "market",
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("station_id"),
    )
    op.create_table(
        "outfitting",
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("station_id"),
    )
    op.create_table(
        "shipyard",
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("station_id"),
    )
    op.create_table(
        "signals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=True),
        sa.Column("ring_name", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.ForeignKeyConstraint(
            ["ring_name"],
            ["ring.name"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "station_economy",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("weight", sa.Integer(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("name", "station_id"),
    )
    op.create_table(
        "station_service",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("name", "station_id"),
    )
    op.create_table(
        "detected_genus",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("signals_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["signals_id"],
            ["signals.id"],
        ),
        sa.PrimaryKeyConstraint("name", "signals_id"),
    )
    op.create_table(
        "detected_signal",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("signals_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["signals_id"],
            ["signals.id"],
        ),
        sa.PrimaryKeyConstraint("name", "signals_id"),
    )
    op.create_table(
        "market_order",
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("category", sa.String(), nullable=False),
        sa.Column("demand", sa.Integer(), nullable=False),
        sa.Column("supply", sa.Integer(), nullable=False),
        sa.Column("buyPrice", sa.Integer(), nullable=False),
        sa.Column("sellPrice", sa.Integer(), nullable=False),
        sa.Column("market_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["market_id"],
            ["market.station_id"],
        ),
        sa.PrimaryKeyConstraint("symbol", "category", "market_id"),
    )
    op.create_table(
        "outfitting_stock",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("moduleId", sa.BigInteger(), nullable=False),
        sa.Column("class_", sa.Integer(), nullable=False),
        sa.Column("rating", sa.String(), nullable=False),
        sa.Column("category", sa.String(), nullable=False),
        sa.Column("ship", sa.String(), nullable=True),
        sa.Column("outfitting_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["outfitting_id"],
            ["outfitting.station_id"],
        ),
        sa.PrimaryKeyConstraint("moduleId", "outfitting_id"),
    )
    op.create_table(
        "prohibited_commodity",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("market_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["market_id"],
            ["market.station_id"],
        ),
        sa.PrimaryKeyConstraint("name", "market_id"),
    )
    op.create_table(
        "shipyard_stock",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("shipId", sa.BigInteger(), nullable=False),
        sa.Column("shipyard_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["shipyard_id"],
            ["shipyard.station_id"],
        ),
        sa.PrimaryKeyConstraint("shipId", "shipyard_id"),
    )
    # ### end Alembic commands ###


def downgrade_postgresql() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("shipyard_stock")
    op.drop_table("prohibited_commodity")
    op.drop_table("outfitting_stock")
    op.drop_table("market_order")
    op.drop_table("detected_signal")
    op.drop_table("detected_genus")
    op.drop_table("station_service")
    op.drop_table("station_economy")
    op.drop_table("signals")
    op.drop_table("shipyard")
    op.drop_table("outfitting")
    op.drop_table("market")
    op.drop_table("station")
    op.drop_table("solid_composition")
    op.drop_table("ring")
    op.drop_table("parent")
    op.drop_table("material")
    op.drop_table("body_timestamp")
    op.drop_table("belt")
    op.drop_table("atmosphere_composition")
    op.drop_table("powerplay")
    op.drop_table("faction_state")
    op.drop_table("body")
    op.drop_table("system")
    op.drop_table("faction")
    # ### end Alembic commands ###


def upgrade_sqlite() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "faction",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("allegiance", sa.String(), nullable=True),
        sa.Column("government", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "system",
        sa.Column("id64", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("x", sa.Numeric(), nullable=False),
        sa.Column("y", sa.Numeric(), nullable=False),
        sa.Column("z", sa.Numeric(), nullable=False),
        sa.Column("allegiance", sa.String(), nullable=True),
        sa.Column("government", sa.String(), nullable=True),
        sa.Column("primaryEconomy", sa.String(), nullable=True),
        sa.Column("secondaryEconomy", sa.String(), nullable=True),
        sa.Column("security", sa.String(), nullable=True),
        sa.Column("population", sa.BigInteger(), nullable=True),
        sa.Column("bodyCount", sa.Integer(), nullable=True),
        sa.Column("controllingFaction_id", sa.String(), nullable=True),
        sa.Column("powerState", sa.String(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["controllingFaction_id"],
            ["faction.name"],
        ),
        sa.PrimaryKeyConstraint("id64"),
    )
    op.create_table(
        "body",
        sa.Column("id64", sa.BigInteger(), nullable=False),
        sa.Column("bodyId", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("subType", sa.String(), nullable=True),
        sa.Column("distanceToArrival", sa.Numeric(), nullable=True),
        sa.Column("mainStar", sa.Boolean(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("spectralClass", sa.String(), nullable=True),
        sa.Column("luminosity", sa.String(), nullable=True),
        sa.Column("absoluteMagnitude", sa.Numeric(), nullable=True),
        sa.Column("solarMasses", sa.Numeric(), nullable=True),
        sa.Column("solarRadius", sa.Numeric(), nullable=True),
        sa.Column("isLandable", sa.Boolean(), nullable=True),
        sa.Column("gravity", sa.Numeric(), nullable=True),
        sa.Column("earthMasses", sa.Numeric(), nullable=True),
        sa.Column("radius", sa.Numeric(), nullable=True),
        sa.Column("surfaceTemperature", sa.Numeric(), nullable=True),
        sa.Column("surfacePressure", sa.Numeric(), nullable=True),
        sa.Column("volcanismType", sa.String(), nullable=True),
        sa.Column("atmosphereType", sa.String(), nullable=True),
        sa.Column("terraformingState", sa.String(), nullable=True),
        sa.Column("reserveLevel", sa.String(), nullable=True),
        sa.Column("rotationalPeriod", sa.Numeric(), nullable=True),
        sa.Column("rotationalPeriodTidallyLocked", sa.Boolean(), nullable=True),
        sa.Column("axialTilt", sa.Numeric(), nullable=True),
        sa.Column("orbitalPeriod", sa.Numeric(), nullable=True),
        sa.Column("semiMajorAxis", sa.Numeric(), nullable=True),
        sa.Column("orbitalEccentricity", sa.Numeric(), nullable=True),
        sa.Column("orbitalInclination", sa.Numeric(), nullable=True),
        sa.Column("argOfPeriapsis", sa.Numeric(), nullable=True),
        sa.Column("meanAnomaly", sa.Numeric(), nullable=True),
        sa.Column("ascendingNode", sa.Numeric(), nullable=True),
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("system_id64", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("id64"),
    )
    op.create_table(
        "faction_state",
        sa.Column("influence", sa.Numeric(), nullable=False),
        sa.Column("state", sa.String(), nullable=False),
        sa.Column("faction_name", sa.String(), nullable=False),
        sa.Column("system_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["faction_name"],
            ["faction.name"],
        ),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("faction_name", "system_id64"),
    )
    op.create_table(
        "powerplay",
        sa.Column("power", sa.String(), nullable=False),
        sa.Column("system_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("power", "system_id64"),
    )
    op.create_table(
        "atmosphere_composition",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("percentage", sa.Numeric(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "belt",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("mass", sa.BigInteger(), nullable=False),
        sa.Column("innerRadius", sa.BigInteger(), nullable=False),
        sa.Column("outerRadius", sa.BigInteger(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "body_timestamp",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("value", sa.DateTime(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "material",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("percentage", sa.Numeric(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "parent",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("bodyId", sa.Integer(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "bodyId", "body_id64"),
    )
    op.create_table(
        "ring",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("mass", sa.BigInteger(), nullable=False),
        sa.Column("innerRadius", sa.BigInteger(), nullable=False),
        sa.Column("outerRadius", sa.BigInteger(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "solid_composition",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("percentage", sa.Numeric(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.PrimaryKeyConstraint("name", "body_id64"),
    )
    op.create_table(
        "station",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("controllingFaction_id", sa.String(), nullable=True),
        sa.Column("controllingFactionState", sa.String(), nullable=True),
        sa.Column("distanceToArrival", sa.Numeric(), nullable=True),
        sa.Column("primaryEconomy", sa.String(), nullable=True),
        sa.Column("allegiance", sa.String(), nullable=True),
        sa.Column("government", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("latitude", sa.Numeric(), nullable=True),
        sa.Column("longitude", sa.Numeric(), nullable=True),
        sa.Column("largeLandingPads", sa.Integer(), nullable=True),
        sa.Column("mediumLandingPads", sa.Integer(), nullable=True),
        sa.Column("smallLandingPads", sa.Integer(), nullable=True),
        sa.Column("body_id64", sa.BigInteger(), nullable=True),
        sa.Column("system_id64", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.ForeignKeyConstraint(
            ["controllingFaction_id"],
            ["faction.name"],
        ),
        sa.ForeignKeyConstraint(
            ["system_id64"],
            ["system.id64"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "market",
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("station_id"),
    )
    op.create_table(
        "outfitting",
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("station_id"),
    )
    op.create_table(
        "shipyard",
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("station_id"),
    )
    op.create_table(
        "signals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("updateTime", sa.DateTime(), nullable=False),
        sa.Column("body_id64", sa.BigInteger(), nullable=True),
        sa.Column("ring_name", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["body_id64"],
            ["body.id64"],
        ),
        sa.ForeignKeyConstraint(
            ["ring_name"],
            ["ring.name"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "station_economy",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("weight", sa.Integer(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("name", "station_id"),
    )
    op.create_table(
        "station_service",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("station_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["station_id"],
            ["station.id"],
        ),
        sa.PrimaryKeyConstraint("name", "station_id"),
    )
    op.create_table(
        "detected_genus",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("signals_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["signals_id"],
            ["signals.id"],
        ),
        sa.PrimaryKeyConstraint("name", "signals_id"),
    )
    op.create_table(
        "detected_signal",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("signals_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["signals_id"],
            ["signals.id"],
        ),
        sa.PrimaryKeyConstraint("name", "signals_id"),
    )
    op.create_table(
        "market_order",
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("category", sa.String(), nullable=False),
        sa.Column("demand", sa.Integer(), nullable=False),
        sa.Column("supply", sa.Integer(), nullable=False),
        sa.Column("buyPrice", sa.Integer(), nullable=False),
        sa.Column("sellPrice", sa.Integer(), nullable=False),
        sa.Column("market_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["market_id"],
            ["market.station_id"],
        ),
        sa.PrimaryKeyConstraint("symbol", "category", "market_id"),
    )
    op.create_table(
        "outfitting_stock",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("moduleId", sa.BigInteger(), nullable=False),
        sa.Column("class_", sa.Integer(), nullable=False),
        sa.Column("rating", sa.String(), nullable=False),
        sa.Column("category", sa.String(), nullable=False),
        sa.Column("ship", sa.String(), nullable=True),
        sa.Column("outfitting_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["outfitting_id"],
            ["outfitting.station_id"],
        ),
        sa.PrimaryKeyConstraint("moduleId", "outfitting_id"),
    )
    op.create_table(
        "prohibited_commodity",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("market_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["market_id"],
            ["market.station_id"],
        ),
        sa.PrimaryKeyConstraint("name", "market_id"),
    )
    op.create_table(
        "shipyard_stock",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("shipId", sa.BigInteger(), nullable=False),
        sa.Column("shipyard_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["shipyard_id"],
            ["shipyard.station_id"],
        ),
        sa.PrimaryKeyConstraint("shipId", "shipyard_id"),
    )
    # ### end Alembic commands ###


def downgrade_sqlite() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("shipyard_stock")
    op.drop_table("prohibited_commodity")
    op.drop_table("outfitting_stock")
    op.drop_table("market_order")
    op.drop_table("detected_signal")
    op.drop_table("detected_genus")
    op.drop_table("station_service")
    op.drop_table("station_economy")
    op.drop_table("signals")
    op.drop_table("shipyard")
    op.drop_table("outfitting")
    op.drop_table("market")
    op.drop_table("station")
    op.drop_table("solid_composition")
    op.drop_table("ring")
    op.drop_table("parent")
    op.drop_table("material")
    op.drop_table("body_timestamp")
    op.drop_table("belt")
    op.drop_table("atmosphere_composition")
    op.drop_table("powerplay")
    op.drop_table("faction_state")
    op.drop_table("body")
    op.drop_table("system")
    op.drop_table("faction")
    # ### end Alembic commands ###
